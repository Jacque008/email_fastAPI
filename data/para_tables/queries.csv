id,errandConnect,emailSpec,errandInfo,forwardSummaryInfo,forwardJournalContact,payment,errandPay,partialPay,errandLink,payout,summaryChat,summaryEmail,summaryComment,info,logBase,logEmail,logChat,logComment,logPaymentOption,logOriginalInvoice,logInvoiceSP,logInvoiceFortus,logInvoiceKA,logInvoiceFortnox,logInvoicePayex,logVetFee,logReceive,logPayexReceived,logCancel,logRemoveCancel,admin,updateClinicEmail
1," SELECT DISTINCT 
                            er.id AS ""errandId"" ,
                            er.reference AS ""errandNumber"" ,
                            er.""createdAt"" AS ""date"" ,
                            fb.""name"" AS ""insuranceCompany"" ,
                            c.""name"" AS ""clinicName"" ,
                            ROUND((sums.""totalAmount"" + 50) / 100) AS ""totalAmount"",
                            ls.""settlementAmount"" , 
                            ic.reference ,
                            ic.""insuranceNumber"" ,
                            ic.""damageNumber"" ,
                            er.""invoiceReference"" ,
                            a.""name"" AS ""animalName"" , 
                            COALESCE(ao.""firstName"", '') || ' ' || COALESCE(ao.""lastName"", '') AS ""ownerName"" ,
                            er.""paymentOption"" ,
                            er.""strategyType"" ,
                            es.settled AS ""settled"" 
                        FROM insurance_case ic 
                        JOIN errand er ON ic.""errandId"" = er.id
                        JOIN animal a  ON ic.""animalId"" = a.id
                        JOIN animal_owner ao ON er.""animalOwnerId"" = ao.id
                        JOIN errand_status es ON er.""statusId"" = es.id
                        JOIN ( SELECT 
                                        ""insuranceCaseId"", 
                                        SUM(amount) AS ""totalAmount"" 
                                    FROM insurance_case_billing_row
                                    GROUP BY ""insuranceCaseId""
                                  ) sums ON ic.id = sums.""insuranceCaseId""
                        LEFT JOIN ( SELECT DISTINCT 
                                        ist.""insuranceCaseId"",
                                        ROUND(ist.""settlementAmount"" / 100, 2) AS ""settlementAmount""
                                    FROM insurance_settlement ist
                                    WHERE ist.""updatedAt"" = (
                                          SELECT MAX(inst.""updatedAt"")
                                          FROM insurance_settlement inst
                                          WHERE inst.""insuranceCaseId"" = ist.""insuranceCaseId"")
                                    ) AS ls ON ls.""insuranceCaseId"" = ic.id
                        INNER join insurance_company_email ice ON ic.""insuranceCompanyEmailId"" = ice.id
                        JOIN insurance_company fb ON ice.""insuranceCompanyId"" = fb.id 
                        JOIN clinic c ON er.""clinicId"" = c.id
                        WHERE {CONDITION}
                        ORDER BY date DESC;"," SELECT DISTINCT 
                        e.id,
                        e.""createdAt"" ,
                        e.""from"" ,
                        e.""to"" ,
                        e.subject ,
                        e.""textPlain"" ,
                        e.""textHtml"" ,
                        e.""object"" ->> 'Attachments' AS ""attachments""
                    FROM email e
                    WHERE {COND};","  SELECT DISTINCT 
                              er.id AS ""errandId"" ,
                              ic.reference ,
                              c.""name"" AS ""clinicName"" ,
                              fb.""name"" AS ""insuranceCompany""
                          FROM insurance_case ic 
                          JOIN errand er ON er.id = ic.""errandId"" 
                          JOIN clinic c ON c.id = er.""clinicId"" 
                          JOIN insurance_company_email ice ON ice.id = ic.""insuranceCompanyEmailId"" 
                          JOIN insurance_company fb ON fb.id = ice.""insuranceCompanyId"" 
                          WHERE {COND} ;","SELECT DISTINCT 
                                e.id,
                                COALESCE(e.""errandId"", (ecr.""data"" -> 'errandId'->> 0)::int) AS ""errandId"" ,
                                ic.reference ,
                                er.""invoiceReference"" ,
                                COALESCE(ecr.""correctedCategory"", ecr.""category"") AS ""correctedCategory"" ,
                                ecr.""data"" ->> 'insuranceNumber' AS ""insuranceNumber"" ,
                                ecr.""data"" ->> 'damageNumber' AS ""damageNumber"" ,
                                ecr.""data"" ->> 'animalName' AS ""animalName"" ,
                                ecr.""data"" ->> 'ownerName' AS ""ownerName"" ,
                                ecr.""data"" ->> 'sender' AS ""sender"" ,
                                COALESCE(ecr.""data"" ->> 'receiver', ecr.""data"" ->> 'recipient') AS ""receiver"" ,
                                fb.id AS ""insuranceCompanyId"" ,
                                c.id AS ""clinicId"" ,
                                c.""linkJournalTenant"" ,
                                a.kind ,
                                ic.""journalNumber"" 
                            FROM email e
                            LEFT JOIN email_category_request ecr ON ecr.""emailId"" = e.id
                            LEFT JOIN clinic c ON ( (((ecr.""data"" ->> 'source') = 'Clinic') 
                                   AND (c.""name"" = (ecr.""data"" ->> 'sender')))
                                 OR (((ecr.""data"" ->> 'source') = 'Insurance_Company') 
                                   AND (c.""name"" = COALESCE(ecr.""data"" ->> 'receiver', ecr.""data"" ->> 'recipient'))))
                            LEFT JOIN insurance_company fb ON ((((ecr.""data"" ->> 'source') = 'Insurance_Company') 
                                   AND (fb.""name"" = (ecr.""data"" ->> 'sender')))
                                 OR (((ecr.""data"" ->> 'source') = 'Clinic') 
                                 AND (fb.""name"" = COALESCE(ecr.""data"" ->> 'receiver', ecr.""data"" ->> 'recipient'))))
                            LEFT JOIN errand er ON e.""errandId"" = er.id
                            LEFT JOIN insurance_case ic ON ic.""errandId"" = er.id 
                            LEFT JOIN animal a ON a.id = ic.""animalId"" 
                            WHERE {COND}
                            ORDER BY e.id DESC;"," SELECT id, ""name"" ,""insuranceCompanyId""
                                FROM insurance_company_journal_contact
                                WHERE email NOTNULL
                                ORDER BY id DESC;"," SELECT DISTINCT
                      id, 
                      amount , 
                      reference , 
                      ""rawBg""->>'info' AS ""info"" ,
                      ""rawBg""->>'name' AS ""bankName"",
                      ""createdAt""
                  FROM bankgiro_payment_file_line bpfl
                  WHERE id = {ID}
                  ORDER BY ""createdAt"" DESC;"," SELECT DISTINCT
                        er.id AS ""errandId"",
                        er.""createdAt"" ,
                        er.reference AS ""errandNumber"" ,
                        ic.id AS ""insuranceCaseId"" ,
                        ic.reference AS ""isReference"",
                        ls.""settlementAmount"", 
                        ic.""damageNumber"" ,
                        er.""invoiceReference"" ,
                        er.""ocrNumber"" ,
                        c.""name"" AS ""clinicName"" ,
                        fb.""name"" AS ""insuranceCompanyName"" ,
                        ic.""animalId"" 
                    FROM errand er
                    JOIN errand_status es ON er.""statusId"" = es.id
                    JOIN insurance_case ic ON ic.""errandId"" = er.id
                    JOIN clinic c ON er.""clinicId"" = c.id 
                    JOIN insurance_company_email ice ON ic.""insuranceCompanyEmailId"" = ice.id 
                    JOIN insurance_company fb ON ice.""insuranceCompanyId"" = fb.id
                    JOIN (SELECT DISTINCT 
                                is2.""insuranceCaseId"",
                                is2.""settlementAmount""
                            FROM insurance_settlement is2
                            WHERE is2.""updatedAt"" = (
                                SELECT MAX(is3.""updatedAt"")
                                FROM insurance_settlement is3
                                WHERE is3.""insuranceCaseId"" = is2.""insuranceCaseId"")
                          ) AS ls ON ls.""insuranceCaseId"" = ic.id
                    WHERE es.complete IS FALSE
                    ORDER BY er.""createdAt"" DESC;"," SELECT DISTINCT
                      er.id AS ""errandId"",
                      er.""createdAt"" ,
                      ic.id AS ""insuranceCaseId"" ,
                      ic.reference AS ""isReference"",
                      ls.""settlementAmount"",
                      tl.""createdAt"" AS ""paymentReceivedTime"" ,
                      ABS(tl.amount) AS ""paymentFromFB""
                  FROM errand er
                  JOIN insurance_case ic ON ic.""errandId"" = er.id
                  JOIN (SELECT DISTINCT 
                              is2.""insuranceCaseId"",
                              is2.""settlementAmount""
                          FROM insurance_settlement is2
                          WHERE is2.""updatedAt"" = (
                              SELECT MAX(is3.""updatedAt"")
                              FROM insurance_settlement is3
                              WHERE is3.""insuranceCaseId"" = is2.""insuranceCaseId"")
                        ) AS ls ON ls.""insuranceCaseId"" = ic.id
                  JOIN ""transaction"" t ON t.""errandId"" = er.id
                  JOIN transaction_line tl ON tl.""transactionId"" = t.id
                  JOIN account a ON a.id = tl.""accountId""
                  WHERE t.type_ IN ('settlement_payment','settlement') AND
                        (t.type_ = 'settlement_payment'
                        OR (t.type_ = 'settlement' AND NOT EXISTS ( 
                            SELECT 1
                            FROM ""transaction"" tt
                            WHERE tt.""errandId"" = t.""errandId""
                              AND tt.type_ = 'settlement_payment')))
                        AND a.""ownerType"" = 'insurance_company'
                        {CONDITION}
                  ORDER BY er.""createdAt"" DESC;","  SELECT DISTINCT
                          ic.id,
                          er.reference AS ""errandNumber"",
                          ic.reference
                      FROM insurance_case ic 
                      JOIN errand er ON ic.""errandId"" = er.id
                      WHERE {CONDITION};","  SELECT DISTINCT
                    bpfl.id ,
                    bpfl.""createdAt"" AS ""createdAt"" ,
                    bpfl.reference ,
                    bpfl.""transactionId"" ,
                    bpfl.amount	,
                    c.""name""  AS ""clinicName"" ,
                    t.type_ AS ""type""
                  FROM bankgiro_payout_file_line bpfl 
                  JOIN ""transaction"" t ON t.id = bpfl.""transactionId"" 
                  JOIN errand er ON er.id = t.""errandId"" 
                  JOIN clinic c  ON c.id = er.""clinicId""
                  WHERE bpfl.""createdAt"" >= NOW() - INTERVAL '2 month'
                  AND bpfl.type_ = 'paid'
                  ORDER BY bpfl.""createdAt"" DESC;","SELECT DISTINCT 
                  ic.reference ,
                  c.type_ ,
                  cm.""createdAt"" ,
                  cm.message,
                  cm.""fromAdminUserId""  ,
                  cm.""fromClinicUserId"" ,
                  c.""clinicId"" ,
                  cl.""name"" AS ""clinicName"",
                  cm.""fromInsuranceCompanyId"" ,
                  c.""insuranceCompanyId"" ,
                  fb.name AS ""insuranceCompanyName"" 
              FROM chat_message cm
              JOIN chat c ON c.id = cm.""chatId""
              JOIN errand er ON er.id = c.""errandId"" 
              JOIN insurance_case ic ON ic.""errandId"" = c.""errandId""
              LEFT JOIN clinic cl ON cl.id = c.""clinicId""
              LEFT JOIN insurance_company fb ON fb.id = c.""insuranceCompanyId""
              WHERE {CONDITION}
              ORDER BY cm.""createdAt"" ;"," SELECT 
                          e.id,
                          e.""createdAt"",
                          e.subject,
                          e.""textPlain"",
                          e.""textHtml"",
                          e.""from"",
                          e.""to"",
                          e.""errandId"",
                          e.folder ,
                          ecr.""data"" ->> 'sender' AS ""sender"",
                          ecr.""data"" ->> 'recipient' AS ""receiver""
                      FROM email e
                      LEFT JOIN email_category_request ecr ON e.id = ecr.""emailId""
                      JOIN errand er ON e.""errandId"" = er.id
                      JOIN insurance_case ic ON ic.""errandId"" = er.id
                      WHERE {CONDITION}
                      ORDER BY e.""createdAt"" ASC;"," SELECT 
                              cr.""emailId"" AS ""id"", 
                              cr.""errandId"" ,
                              c.id AS ""commentId"",
                              c.""createdAt"" ,
                              c.content AS ""content"",
                              CASE 
                                  WHEN cr.""emailId"" IS NOT NULL THEN 'Email'
                                  WHEN cr.""errandId"" IS NOT NULL THEN 'Errand'
                              END AS ""type""
                          FROM comment c
                          JOIN comment_relation cr ON c.id = cr.""commentId""
                          LEFT JOIN email e ON cr.""emailId"" = e.id
                          LEFT JOIN errand er ON cr.""errandId"" = er.id
                          LEFT JOIN insurance_case ic ON ic.""errandId"" = cr.""errandId""
                          WHERE c.""content"" IS NOT NULL
                            AND {CONDITION}
                          ORDER BY c.""createdAt"" ASC;","  SELECT DISTINCT 
                    e.id,
                    ecr.""timestamp"",
                    ecr.""data"" ->> 'sender' AS ""sender"" ,
                    ecr.""data"" ->> 'recipient' AS ""receiver"" ,
                    ecr.""data"" ->> 'source' AS ""source"" ,
                    ecr.category ,
                    ecr.""correctedCategory"" ,
                    e.subject 
                FROM email_category_request ecr 
                LEFT JOIN email e ON ecr.""emailId"" = e.id 
                WHERE {CONDITION}
                    AND (ecr.category = 'Information' OR ecr.""correctedCategory"" = 'Information')
                    LIMIT 1;"," SELECT  
                    er.id AS ""errandId"" ,
                    er.reference AS ""errandNumber"" ,
                    er.""createdAt"" AS ""errandCreaTime"" ,
                    ic.id AS ""insuranceCaseId"" ,
                    ic.reference ,
                    ls.""settlementAmount"" ,
                    ls.""updatedAt"" AS ""updatedTime"" ,
                    er.""clinicId"" ,
                    c.""name"" AS ""clinicName"" ,
                    ic.id AS ""insuranceCompanyId"" ,
                    ic2.""name"" AS ""insuranceCompanyName"" ,
                    ic.""insuranceEmailLastSent"" AS ""sendTime"" ,
                    es.complete 
                  FROM errand er
                  JOIN insurance_case ic ON ic.""errandId"" = er.id
                  LEFT JOIN ( SELECT DISTINCT ist.""insuranceCaseId"", ROUND(ist.""settlementAmount"" / 100, 2) AS ""settlementAmount"" , ist.""updatedAt""
                              FROM insurance_settlement ist
                              WHERE ist.""updatedAt"" = (
                                    SELECT MAX(inst.""updatedAt"")
                                    FROM insurance_settlement inst
                                    WHERE inst.""insuranceCaseId"" = ist.""insuranceCaseId"")
                              ) AS ls ON ls.""insuranceCaseId"" = ic.id
                  JOIN clinic c ON c.id = er.""clinicId"" 
                  JOIN insurance_company_email ice ON ice.id = ic.""insuranceCompanyEmailId"" 
                  JOIN insurance_company ic2 ON ic2.id = ice.""insuranceCompanyId"" 
                  JOIN errand_status es ON es.id = er.""statusId"" 
                  WHERE {COND}
                  ORDER BY er.""createdAt"" DESC","SELECT  
                      er.id AS ""errandId"" ,
                      e.id AS ""emailId"",
                      e.""createdAt"" AS ""emailTime"" ,
                      e.subject ,
                      e.""textPlain"" ,
                      e.""textHtml"" ,
                      ecr.category ,
                      ecr.""correctedCategory"" ,
                      ecr.""data"" ->> 'source' AS ""source"" 
                  FROM errand er             
                  JOIN email e ON e.""errandId"" = er.id
                  JOIN email_category_request ecr ON ecr.""emailId"" = e.id
                  WHERE e.folder = 'inbox'
                    AND {COND}
                  ORDER BY er.""createdAt"" DESC","SELECT  
                        er.id AS ""errandId"" ,
                        cm.id AS ""chatMessageId"" ,
                        c.type_ AS ""chatType"",
                        cm.""createdAt"" AS ""chatTime"" ,
                        au.""firstName"" AS ""chatDRP"" ,
                        cm.message ,
                        --cm.""fromClinicUserId"" AS ""chatClinic"" ,
                        clinic.""name"" AS ""chatClinic"" ,
                        --cm.""fromInsuranceCompanyId"" AS ""chatFB"" ,
                      	fb.""name"" AS ""chatFB""
                    FROM errand er  
                    JOIN chat c ON c.""errandId"" = er.id
                    JOIN chat_message cm ON cm.""chatId"" = c.id
                    LEFT JOIN clinic_user cu  ON cu.id = cm.""fromClinicUserId"" 
                    LEFT JOIN clinic ON clinic.id = cu.""clinicId"" 
                    LEFT JOIN insurance_company fb ON fb.id = cm.""fromInsuranceCompanyId"" 
                    LEFT JOIN admin_user au ON cm.""fromAdminUserId"" = au.id
                    WHERE {COND}
                    ORDER BY er.""createdAt"" DESC","SELECT  
                        er.id AS ""errandId"" ,
                        cr.""commentId"" ,
                        cr.""createdAt"" AS ""commentTime"" ,
                        c2.""content"" ,
                        c2.""createdByAdminId"" ,
                        au2.""firstName"" AS ""commentDRP"" 
                    FROM errand er 
                    JOIN comment_relation cr ON cr.""errandId"" = er.id
                    JOIN ""comment"" c2 ON c2.id = cr.""commentId"" 
                    LEFT JOIN admin_user au2 ON c2.""createdByAdminId"" = au2.id
                    WHERE {COND}
                    ORDER BY er.""createdAt"" DESC","SELECT t.""paymentOption""  
                          FROM ""transaction"" t  
                          JOIN errand er ON er.id = t.""errandId"" 
                          WHERE t.""paymentOption"" NOTNULL
                            AND {COND};","SELECT  
                                t.""errandId"" ,
                                t.""createdAt"" AS ""transTime"" ,
                                (tl.amount / 100) AS ""invoiceAmount"" 
                            FROM ""transaction"" t 
                            JOIN errand er on er.id = t.""errandId""
                            JOIN transaction_line tl ON tl.""transactionId"" = t.id
                            JOIN account a on tl.""accountId"" = a.id
                            WHERE t.type_ = 'original_invoice'
                                AND a.""ownerType"" = 'animal_owner'
                                AND {COND}
                            ORDER BY er.""createdAt"" DESC;","SELECT  
                          t.""errandId"" ,
                          t.""createdAt"" AS ""transTime"" ,
                          t.""paymentOption"" ,
                          spo.""invoiceNumber""  ,
	                        spo.""invoiceAmount""
                      FROM ""transaction"" t
                      JOIN errand er on er.id = t.""errandId""
                      LEFT JOIN (SELECT sp.id, 
                                         sp.""payeeReference"" AS ""invoiceNumber"",
                                         ROUND(CAST(sp.""extSwedbankPayOrder"" -> 'paymentOrder' ->> 'amount' AS NUMERIC) / 100, 2) AS ""invoiceAmount"" 
                                  FROM swedbank_pay_order sp) AS spo ON spo.id = t.""swedbankPayOrderId""
                      WHERE t.type_ = 'customer_invoice'
                        AND t.""paymentOption"" = 'swedbankPay'
                        AND {COND}
                      ORDER BY er.""createdAt"" DESC","SELECT  
                          t.""errandId"" ,
                          t.""createdAt"" AS ""transTime"" ,
                          t.""paymentOption"" ,
                          f.""invoiceNumber"",
	                        f.""invoiceAmount""
                      FROM ""transaction"" t
                      JOIN errand er on er.id = t.""errandId""
                      LEFT JOIN (SELECT fo.id, 
                                         fo.""fortusInvoiceNumber"" AS ""invoiceNumber"",
                                         fo.""orderData"" ->> 'order_amount' AS ""invoiceAmount""  
                                  FROM fortus_order fo) AS f ON f.id = t.""fortusOrderId""
                      WHERE t.type_ = 'customer_invoice'
                        AND t.""paymentOption"" = 'fortus'
                        AND {COND}
                      ORDER BY er.""createdAt"" DESC","SELECT  
                          t.""errandId"" ,
                          t.""createdAt"" AS ""transTime"" ,
                          t.""paymentOption"" ,
                          ka.""invoiceNumber"" ,
                          ka.""invoiceAmount"" 
                      FROM ""transaction"" t 
                      JOIN errand er ON t.""errandId"" = er.id 
                      LEFT JOIN (SELECT DISTINCT 
                                t.id AS ""id"",
                                t.reference AS ""invoiceNumber"" , 
                                ROUND(tl.amount / 100, 2) AS ""invoiceAmount"" 
                            FROM ""transaction"" t
                            JOIN transaction_line tl ON tl.""transactionId"" = t.id
                            JOIN account a on tl.""accountId"" = a.id
                            WHERE a.""ownerType"" = 'animal_owner') AS ka ON ka.""id"" = t.""customerPaymentId""
                      WHERE t.type_ = 'customer_invoice'
                        AND t.""paymentOption"" = 'manual
                        AND {COND}
                      ORDER BY er.""createdAt"" DESC"," SELECT DISTINCT 
                                er.id AS ""errandId"", 
                                er.""createdAt"" AS ""transTime"" ,
                                'Fortnox' AS ""paymentOption"", 
                                di.""datacentralenInvoiceId"" AS ""invoiceNumber"" ,
                                (di.amount / 100.0 ) AS ""invoiceAmount""
                            FROM  ""transaction"" t 
                            JOIN datacentralen_invoice di ON t.""datacentralenInvoiceId"" = di.id
                            JOIN errand er ON er.id = t.""errandId""
                            WHERE t.type_ = 'customer_invoice'
                              AND t.""paymentOption"" in ('datacentralen', 'datacentralen12')
                              AND {COND}
                              ORDER BY er.""createdAt"" DESC;"," SELECT DISTINCT 
                              er.id AS ""errandId"", 
                              ao.id AS ""animalOwnerId"" ,
                              t.reference AS ""invoiceNumber"" ,
                              pif.""fileName"" ,
                              er.""createdAt"" AS ""transTime"",
                              er.""paymentOption""
                          FROM ""transaction"" t 
                          JOIN errand er ON er.id = t.""errandId""
                          JOIN animal_owner ao ON er.""animalOwnerId"" = ao.id
                          JOIN payex_invoice pyi ON t.id = pyi.""customerInvoiceId"" 
                          JOIN payex_invoice_file pif ON pyi.""payexInvoiceFileId"" = pif.id
                          WHERE er.""paymentOption"" = 'payex'
                            AND t.type_ = 'customer_invoice'
                            AND {COND}
                          ORDER BY er.""createdAt"" DESC;"," SELECT  
                        t.""errandId"" ,
                        t.""createdAt"" AS ""transTime"" ,
                        t.reference ,
	                      a.""name"",
                        ROUND(tl.amount / 100, 2) AS ""vetFeeAmount"" 
                    FROM ""transaction"" t 
                    JOIN errand er on er.id = t.""errandId""
                    JOIN transaction_line tl ON tl.""transactionId"" = t.id
                    JOIN account a on tl.""accountId"" = a.id
                    WHERE t.type_ = 'fee_vet'
                      AND a.""ownerType"" = 'clinic'
                      AND a.type_ = 'payable'
                      AND {COND}
                    ORDER BY er.""createdAt"" DESC;","SELECT 
                        t.""errandId"" ,
                        t.id AS ""transactionId"" ,
                        tl.""createdAt"" ,
                        (tl.amount / -100.0) AS ""amount"",
                        a.""name"" ,
                        tl.""accountingDate""
                    FROM transaction_line tl
                    JOIN account a ON tl.""accountId"" = a.id
                    JOIN ""transaction"" t ON tl.""transactionId"" = t.id
                    JOIN errand er on er.id = t.""errandId""
                    JOIN errand_status es ON es.id = er.""statusId"" 
                    WHERE {COND}
                    ORDER BY er.""createdAt"" DESC","  WITH tx AS (
                              SELECT d.id,
                                    (d.""rawData""::jsonb->'$'->>'PXId')            AS pxid,
                                    (d.""rawData""::jsonb->'$'->>'AccountName')     AS account_name,
                                    (t->'$'->>'BookAccount')                      AS book_account,
                                    (t->'$'->>'AccountingAction')                 AS accounting_action,
                                    (t->'$'->>'Amount')::numeric                  AS amount
                              FROM payex_accounting_detail d
                              CROSS JOIN LATERAL jsonb_path_query(
                                d.""rawData""::jsonb,
                                '$.VoucherDetailTransactions[*].VoucherDetailTransaction[*]'::jsonpath
                              ) t)
                            SELECT DISTINCT 
                              er.id AS ""errandId"", 
                              d.account_name,
                              c.""name"", 
                              er.""createdAt"" ,
                              er.""paymentOption"", 
                              COALESCE(
                                (
                                  SELECT -p.amount
                                  FROM tx p
                                  WHERE p.id = d.id
                                    AND p.accounting_action = 'C' AND p.book_account = '1510'
                                    AND EXISTS (
                                      SELECT 1 FROM tx c
                                      WHERE c.id = d.id
                                        AND c.accounting_action = 'D' AND c.book_account = '1684'
                                        AND c.amount = -p.amount
                                    )
                                  LIMIT 1
                                ),
                                (
                                  SELECT  p.amount
                                  FROM tx p
                                  WHERE p.id = d.id
                                    AND p.accounting_action = 'C' AND p.book_account = '1510'
                                    AND EXISTS (
                                      SELECT 1 FROM tx disc
                                      WHERE disc.id = d.id
                                        AND disc.accounting_action = 'D' AND disc.book_account = '3710'
                                        AND disc.amount = -p.amount
                                    )
                                  LIMIT 1
                                ),
                                (
                                  SELECT -pd.amount
                                  FROM tx pd
                                  WHERE pd.id = d.id
                                    AND pd.accounting_action = 'C' AND pd.book_account = '1519'
                                    AND EXISTS (
                                      SELECT 1 FROM tx c
                                      WHERE c.id = d.id
                                        AND c.accounting_action = 'D' AND c.book_account = '1684'
                                        AND c.amount = -pd.amount
                                    )
                                  LIMIT 1
                                ),
                                0
                              ) AS customer_paid_amount
                            FROM (SELECT DISTINCT id, pxid, account_name FROM tx) d
                            LEFT JOIN ""transaction"" t        ON t.reference = d.account_name
                            LEFT JOIN transaction_line tl    ON tl.""transactionId"" = t.id
                            LEFT JOIN account a              ON a.id = tl.""accountId""
                            LEFT JOIN errand er              ON er.id = t.""errandId""
                            LEFT JOIN clinic c               ON c.id = er.""clinicId""
                            WHERE er.""paymentOption"" = 'payex'
                              AND t.type_ = 'customer_payment'
                              AND a.""ownerType"" = 'animal_owner'
                              AND a.type_ = 'receivable'
                              AND {COND}
                            ORDER BY er.""createdAt"" DESC ;"," SELECT
                                                    t.""errandId"" ,
                                                    t.id AS ""transactionId"" ,
                                                    t.""createdAt"" AS ""cancelTime""
                                                FROM ""transaction""  t               
                                                JOIN errand er ON er.id = t.""errandId"" 
                                                JOIN errand_status es ON es.id = er.""statusId"" 
                                                WHERE t.type_ = 'cancel'
                                                  AND es.cancelled IS TRUE
                                                  AND {COND}
                                                ORDER BY er.""createdAt"" DESC "," SELECT
                              t.""errandId"" ,
                              t.id AS ""transactionId"" ,
                              t.""createdAt"" AS ""removeTime""
                          FROM ""transaction""  t
                          JOIN errand er ON er.id = t.""errandId"" 
                          WHERE t.type_ = 'remove_cancel'
                            AND {COND}
                          ORDER BY er.""createdAt"" DESC "," SELECT id, email, ""firstName""
                FROM admin_user au
                WHERE {COND}; "," SELECT DISTINCT 
                                c.id AS ""clinicId"",
                                c.""name"" AS ""clinicName"",
                                c.""email"" AS ""clinicEmail"", 
                                'main_email' AS ""role"",
                                c.inactivated 
                            FROM clinic c
                            UNION 
                            SELECT DISTINCT 
                                c.id AS ""clinicId"",
                                c.""name"" AS ""clinicName"",
                                c.""functionEmail"" AS ""clinicEmail"",
                                'function_email' AS ""role"",
                                c.inactivated 
                            FROM clinic c
                            UNION
                            SELECT DISTINCT 
                                c.id AS ""clinicId"",
                                c.""name"" AS ""clinicName"",
                                cu.email AS ""clinicEmail"",
                                'employee_email' AS ""role"",
                                c.inactivated 
                            FROM clinic c
                            JOIN clinic_user cu ON cu.""clinicId"" = c.id
                            WHERE cu.email IS NOT NULL
                              AND cu.email <> c.""email""
                              AND cu.email <> c.""functionEmail""
                              AND cu.active = TRUE 
                              AND cu.email NOT IN ('mail@direktregleringsportalen.se', 'support@direktregleringsportalen.se')
                              AND cu.email NOT ILIKE '%@drp.se'
                              AND cu.email NOT ILIKE '%@apoex.se'
                            ORDER BY ""clinicId"";"
